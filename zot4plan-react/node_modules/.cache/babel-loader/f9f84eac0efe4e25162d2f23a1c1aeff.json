{"ast":null,"code":"var _jsxFileName = \"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Requirements.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport required_ics from '../assets/icsrequirements';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { icsData } from '../assets/IcsData';\nimport CourseCard from './CourseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Requirements = courses => {\n  let courseArray = Object.entries(required_ics);\n  let index = 0;\n\n  function renderCol() {\n    let columns = [];\n    index++;\n\n    while (index < courseArray.length && courseArray[index][1]) {\n      if (icsData.hasOwnProperty(courseArray[index][0])) {\n        let position = courses.findIndex(course => course.id === item.id);\n\n        if (courses[position].quarter !== 0) {\n          columns.push( /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CourseCard, {\n              item: icsData[courseArray[index][0]],\n              index: icsData[courseArray[index][0]].id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this)\n          }, courseArray[index][0], false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 34\n          }, this));\n        }\n\n        columns.push( /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CourseCard, {\n            item: icsData[courseArray[index][0]],\n            index: icsData[courseArray[index][0]].id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, courseArray[index][0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 30\n        }, this));\n      } else columns.push( /*#__PURE__*/_jsxDEV(Col, {\n        children: courseArray[index][0]\n      }, courseArray[index][0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this));\n\n      index++;\n    }\n\n    return columns;\n  }\n\n  function renderRequirements() {\n    var rows = [];\n\n    for (index; index < courseArray.length; index++) {\n      let i = index;\n\n      if (!courseArray[index][1]) {\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: courseArray[i][0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 59\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Row, {\n            md: 8,\n            xs: 4,\n            children: renderCol()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 88\n          }, this)]\n        }, courseArray[i][0], true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }, this));\n        index--;\n      }\n    }\n\n    return rows;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderRequirements()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Requirements;\nexport default Requirements;\n\nvar _c;\n\n$RefreshReg$(_c, \"Requirements\");","map":{"version":3,"sources":["/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Requirements.js"],"names":["required_ics","Container","Row","Col","icsData","CourseCard","Requirements","courses","courseArray","Object","entries","index","renderCol","columns","length","hasOwnProperty","position","findIndex","course","id","item","quarter","push","renderRequirements","rows","i"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport required_ics from '../assets/icsrequirements';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {icsData} from '../assets/IcsData'\nimport CourseCard from './CourseCard'\n\nconst Requirements = (courses) => {\n\n    let courseArray = Object.entries(required_ics)\n    let index = 0\n\n    function renderCol(){  \n        let columns = []\n        index++\n        while(index < courseArray.length && courseArray[index][1]){\n\n            if(icsData.hasOwnProperty(courseArray[index][0])){\n                let position = courses.findIndex((course) => course.id === item.id)\n                if(courses[position].quarter !== 0){\n                    columns.push(<Col key = {courseArray[index][0]}>\n                        <CourseCard \n                            item={icsData[courseArray[index][0]]}\n                            index={icsData[courseArray[index][0]].id} > \n                        </CourseCard>\n                        </Col>)\n                }\n\n                columns.push(<Col key = {courseArray[index][0]}>\n                    <CourseCard \n                        item={icsData[courseArray[index][0]]}\n                        index={icsData[courseArray[index][0]].id} > \n                    </CourseCard>\n                    </Col>)\n            }\n            else\n                columns.push(<Col key = {courseArray[index][0]}>{courseArray[index][0]}</Col>)\n            index++\n\n        }\n        return columns\n    }\n\n    function renderRequirements(){        \n        var rows = []\n        for(index; index < courseArray.length; index++){\n            let i = index \n            if(!courseArray[index][1]){\n                rows.push(<div key = {courseArray[i][0]}> <h6>{courseArray[i][0]}</h6> <Row md={8} xs={4}>\n                {renderCol()}</Row></div>)\n                index--\n            }\n        }\n        return rows\n    }\n\n    return (\n        <Container>\n            {renderRequirements()}\n        </Container>\n    )\n}\n\nexport default Requirements"]},"metadata":{},"sourceType":"module"}