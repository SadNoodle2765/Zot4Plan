{"ast":null,"code":"var _jsxFileName = \"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Courses.js\",\n    _s = $RefreshSig$();\n\nimport CourseCard from \"./CourseCard\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDrop } from 'react-dnd';\nimport ItemTypes from '../assets/ItemTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Courses(_ref) {\n  _s();\n\n  let {\n    courses,\n    onDrop\n  } = _ref;\n  const [{\n    isOver\n  }, dropRef] = useDrop(() => ({\n    accept: ItemTypes,\n    drop: (item, monitor) => onDrop(item.item, 0),\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    style: {\n      backgroundColor: 'grey',\n      minHeight: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4 mh-200\",\n      variant: \"light\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: 3,\n        xs: 2,\n        children: courses.map(course => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(CourseCard, {\n            item: course,\n            index: course.id\n          }, course.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Courses, \"kR+zGxC4m+4GBCr2BiZErhG5N4A=\", false, function () {\n  return [useDrop];\n});\n\n_c = Courses;\nexport default Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Courses.js"],"names":["CourseCard","Container","Row","Col","useDrop","ItemTypes","Courses","courses","onDrop","isOver","dropRef","accept","drop","item","monitor","collect","backgroundColor","minHeight","map","course","id"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAO,sCAAP;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,SAASC,OAAT,OAAoC;AAAA;;AAAA,MAAnB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAmB;AAEhC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,OAAb,IAAwBN,OAAO,CAAC,OAAO;AACzCO,IAAAA,MAAM,EAAEN,SADiC;AAEzCO,IAAAA,IAAI,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmBN,MAAM,CAACK,IAAI,CAACA,IAAN,EAAY,CAAZ,CAFU;AAGzCE,IAAAA,OAAO,EAAGD,OAAD,KAAc;AACrBL,MAAAA,MAAM,EAAEK,OAAO,CAACL,MAAR;AADa,KAAd;AAHgC,GAAP,CAAD,CAArC;AAQA,sBACI;AAAK,IAAA,GAAG,EAAEC,OAAV;AACI,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAC,MAAjB;AAAyBC,MAAAA,SAAS,EAAC;AAAnC,KADX;AAAA,2BAEA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,aAArB;AAAmC,MAAA,OAAO,EAAC,OAA3C;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA,kBACKV,OAAO,CAACW,GAAR,CAAaC,MAAD,iBACb,QAAC,GAAD;AAAqB,UAAA,SAAS,EAAC,WAA/B;AAAA,iCACI,QAAC,UAAD;AAEI,YAAA,IAAI,EAAEA,MAFV;AAGI,YAAA,KAAK,EAAEA,MAAM,CAACC;AAHlB,aACSD,MAAM,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUD,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA5BQd,O;UAEyBF,O;;;KAFzBE,O;AA+BT,eAAeA,OAAf","sourcesContent":["import CourseCard from \"./CourseCard\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { useDrop } from 'react-dnd';\nimport ItemTypes from '../assets/ItemTypes';\n\nfunction Courses({courses, onDrop}) {\n\n    const [{ isOver }, dropRef] = useDrop(() => ({\n        accept: ItemTypes,\n        drop: (item, monitor) => onDrop(item.item, 0),\n        collect: (monitor) => ({\n          isOver: monitor.isOver(),\n        }),\n      })); \n\n    return (\n        <div ref={dropRef}\n            style={{backgroundColor:'grey', minHeight:100}}>\n        <Container className='mt-4 mh-200' variant=\"light\">\n            <Row md={3} xs={2}>\n                {courses.map((course)=> \n                <Col key={course.id} className='mt-2 mb-2'>\n                    <CourseCard \n                        key={course.id}\n                        item={course}\n                        index={course.id} > \n                    </CourseCard>\n                </Col>\n                )}\n            </Row>\n        </Container>\n        </div>\n    );\n}\n\n  \nexport default Courses;"]},"metadata":{},"sourceType":"module"}