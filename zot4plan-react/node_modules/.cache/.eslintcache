[{"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/index.js":"1","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/App.js":"2","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/reportWebVitals.js":"3","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Header.js":"4","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/Assets/data.js":"5","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Courses.js":"6","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/CourseCard.js":"7","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/Assets/ItemTypes.js":"8","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/QuarterColumn.js":"9","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/pages/AboutPage.js":"10","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/pages/HomePage.js":"11","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Inputs.js":"12","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/data.js":"13","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/ItemTypes.js":"14","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Requirements.js":"15","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/icsrequirements.js":"16","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/IcsData.js":"17","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Schedules.js":"18"},{"size":500,"mtime":1640329398817,"results":"19","hashOfConfig":"20"},{"size":744,"mtime":1641280540269,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1639901440778,"results":"22","hashOfConfig":"20"},{"size":677,"mtime":1640329398816,"results":"23","hashOfConfig":"20"},{"size":3314,"mtime":1639901440775,"results":"24","hashOfConfig":"20"},{"size":1105,"mtime":1640329398816,"results":"25","hashOfConfig":"20"},{"size":2608,"mtime":1641275383844,"results":"26","hashOfConfig":"20"},{"size":54,"mtime":1639901440774,"results":"27","hashOfConfig":"20"},{"size":860,"mtime":1641281402237,"results":"28","hashOfConfig":"20"},{"size":148,"mtime":1640329398817,"results":"29","hashOfConfig":"20"},{"size":1815,"mtime":1641283295675,"results":"30","hashOfConfig":"20"},{"size":505,"mtime":1640329398816,"results":"31","hashOfConfig":"20"},{"size":292321,"mtime":1641275383843,"results":"32","hashOfConfig":"20"},{"size":54,"mtime":1641275383840,"results":"33","hashOfConfig":"20"},{"size":3202,"mtime":1641278679375,"results":"34","hashOfConfig":"20"},{"size":3147,"mtime":1641276581213,"results":"35","hashOfConfig":"20"},{"size":0,"mtime":1641275383839,"results":"36","hashOfConfig":"20"},{"size":1821,"mtime":1641281385569,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1y9zlzo",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/index.js",[],["79","80"],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/App.js",["81"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport {useState} from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nfunction App() {\n\n  return (\n  <DndProvider backend={HTML5Backend}>\n    <BrowserRouter>\n      <Header/>\n      <Routes>\n        <Route path=\"/\" element={<HomePage/>}></Route>\n        <Route path=\"/home\" element={<HomePage/>}></Route>\n        <Route path=\"/about\" element={<AboutPage/>}></Route>\n      </Routes>\n    </BrowserRouter>\n  </DndProvider>\n  );\n}\n\nexport default App;\n","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/reportWebVitals.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Header.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/Assets/data.js",["82"],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Courses.js",["83"],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/CourseCard.js",["84","85"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Popover,OverlayTrigger,Button } from 'react-bootstrap';\nimport React, {useRef} from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport ItemTypes from '../assets/ItemTypes';\nimport './EditButton.css'\nfunction CourseCard({item, index, buttonClass}) {\n    const ref = useRef(null)\n   /* const [, dropRef] = useDrop({\n        accept: ItemTypes,\n        hover(item, monitor) {\n            if(!ref.current){\n                return;\n            }\n            const dragIndex = item.id;\n            const hoverIndex = index;\n\n            if(dragIndex === hoverIndex) {\n                return;\n            }\n\n            const hoveredRect = ref.current.getBoundClientRect();\n            const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n            const mousePosition = monitor.getClientOffset();\n            const hoverClientY = mousePosition.y - hoveredRect.top;\n\n            if(dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            if(dragIndex > hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n           // moveItem(dragIndex, hoverIndex);\n            item.id=hoverIndex;\n            \n        }\n    }) */\n    const [{isDragging}, dragRef] = useDrag({\n        type: ItemTypes,\n        item: () => ({item}),\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging()\n        }),\n    });\n    \n   // const [show, setShow] = useState(false);\n   // const onOpen = () => setShow(true);\n   // const onClose = () => setShow(false);\n\n   // const dragDropRef = dragRef(dropRef(ref))\n    return (\n        <div\n            ref={dragRef}\n            style={{opacity: isDragging? 0.4 : 1}}\n        >\n            <OverlayTrigger\n                trigger=\"click\"\n                placement='bottom'\n                overlay={\n                <Popover id={item.id}>\n                    <Popover.Header as=\"h4\">{item.name}</Popover.Header>\n                    <Popover.Body> {\"Description: \" + item.description} </Popover.Body>\n                    <Popover.Body> {item.prereqString} </Popover.Body>\n                    <Popover.Body> {item.restriction} </Popover.Body>\n                </Popover>\n                }\n            >\n                \n                <Button \n                    variant=\"primary\" \n                    size ='sm' \n                    className={buttonClass}\n                >\n                    {item.id}\n                </Button>\n            </OverlayTrigger>\n        </div>\n    ); \n}\n\n  \nexport default CourseCard;","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/Assets/ItemTypes.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/QuarterColumn.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/pages/AboutPage.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/pages/HomePage.js",["86","87","88","89","90"],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Inputs.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/data.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/ItemTypes.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Requirements.js",["91","92","93"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport required_ics from '../assets/icsrequirements';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport CourseCard from './CourseCard'\nimport { Popover,OverlayTrigger,Button } from 'react-bootstrap';\nimport { useDrop } from 'react-dnd';\nimport ItemTypes from '../assets/ItemTypes';\n\n\nconst Requirements = ({courses, onDrop}) => {\n\n    let courseArray = required_ics\n    let index = 0\n    \n    const [{ isOver }, dropRef] = useDrop(() => ({\n        accept: ItemTypes,\n        drop: (item, monitor) => onDrop(item.item, 0),\n        collect: (monitor) => ({\n          isOver: monitor.isOver(),\n        }),\n      })); \n\n    function renderCol(){  \n        let columns = []\n        index++\n        while(index < courseArray.length && courseArray[index][1]){\n            let courseId =  courseArray[index][0]\n            \n            if(courses[courseId] != undefined){\n\n                if(courses[courseId].quarter !== 0){\n                    columns.push(<Col className=\"mt-2\" key = {courseId}>\n                        <div style={{width: 100}}>\n                        <OverlayTrigger\n                            trigger=\"click\"\n                            placement='bottom'\n                            overlay={\n                            <Popover id={courses[courseId].id}>\n                                <Popover.Header as=\"h4\">{courseId}</Popover.Header>\n                                <Popover.Body> {courses[courseId].description} </Popover.Body>\n                                <Popover.Body> {courses[courseId].prereqString} </Popover.Body>\n                                <Popover.Body> {courses[courseId].restriction} </Popover.Body>\n                            </Popover>\n                            }\n                            >\n                            <Button variant=\"outline-secondary\" size ='sm'>{courseId}</Button>\n                        </OverlayTrigger>\n                        </div>\n                        </Col>)\n                }else{\n\n                columns.push(<Col className=\"mt-2\" key = {courseId}>\n                    <CourseCard \n                        item={courses[courseId]}\n                        index={courseId}\n                        buttonClass=\"edit-button\" > \n                    </CourseCard>\n                    </Col>)\n                }\n            }\n            else\n                columns.push(<Col className=\"mt-2\" key = {courseId}>{courseId}</Col>)\n            index++\n\n        }\n        return columns\n    }\n\n    function renderRequirements(){        \n        var rows = []\n\n       // console.log(courses)\n        for(index; index < courseArray.length; index++){\n            let i = index \n            if(!courseArray[index][1]){\n                rows.push(<div key = {courseArray[i][0] + i}> \n                                <h6>{courseArray[i][0]}</h6> \n                                <Row xs={3} md={4} className=\"mt-2\"> {renderCol()}</Row>\n                          </div>)\n                index--\n            }\n        }\n        return rows\n    }\n\n    return (\n        <div ref = {dropRef} >\n            {renderRequirements()}\n        </div>\n    )\n}\n\nexport default Requirements","/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/icsrequirements.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/assets/IcsData.js",[],"/Users/tramla/Desktop/Zot4Plan/zot4plan-react/src/components/Schedules.js",["94","95"],"import QuarterColumn from \"./QuarterColumn\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col} from 'react-bootstrap';\n\n\nfunction Schedules({courses, moveCourse}) {\n    const years = ['Freshman','Sophomore','Junior','Senior'];\n    const quarters = ['Fall','Winter','Spring'];\n    const quartersColor = ['#FA8072','#a0e6ff','#58D68D']\n    //'#E2E8E4' : grey\n    let quarterCourses = [[],[],[],[],[],[],[],[],[],[],[],[]]\n    Object.values(courses).forEach((course) => {\n        if(course.quarter > 0)\n            quarterCourses[course.quarter-1].push(course);\n    })\n    \n    return (\n        <>\n            {years.map((year, indexYear)=>(\n              <Row key={year} className='mt-4 square border border-3 border-end-0'>\n                <h3 key={year} \n                  style={{backgroundColor:'#17202A',color: '#FDFEFE'}}\n                  className=\"p-1 mb-0 square border-bottom border-end border-3\"> {year} \n                </h3>\n\n                {quarters.map((quarter, indexQuarter) => {\n                  const currentQuarter = indexYear*3 + indexQuarter + 1;\n                  return (\n                    <Col key={year+quarter} className='p-0 square border-end border-3'>\n                      <h5 \n                      style={{backgroundColor:'#E2E8E4', marginBottom:'0px',}} \n                      className=\"square border-bottom border-3 p-1\"> {quarter}\n                      </h5>\n\n                      <QuarterColumn \n                        courses={quarterCourses[currentQuarter-1]} \n                        onDrop={moveCourse} \n                        quarter={currentQuarter}>\n                      </QuarterColumn>\n                    </Col>\n                  )\n                })}\n              </Row>\n            ))}  \n        </>\n    );\n}\n\n  \nexport default Schedules;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":6,"column":9,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":1,"column":7,"nodeType":"102","messageId":"103","endLine":1,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":9,"column":14,"nodeType":"102","messageId":"103","endLine":9,"endColumn":20},{"ruleId":"100","severity":1,"message":"106","line":4,"column":19,"nodeType":"102","messageId":"103","endLine":4,"endColumn":26},{"ruleId":"100","severity":1,"message":"107","line":8,"column":11,"nodeType":"102","messageId":"103","endLine":8,"endColumn":14},{"ruleId":"100","severity":1,"message":"108","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":21},{"ruleId":"100","severity":1,"message":"109","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":20,"column":26,"nodeType":"112","messageId":"113","endLine":20,"endColumn":28},{"ruleId":"100","severity":1,"message":"114","line":27,"column":9,"nodeType":"102","messageId":"103","endLine":27,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":28,"column":9,"nodeType":"102","messageId":"103","endLine":28,"endColumn":17},{"ruleId":"100","severity":1,"message":"115","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"105","line":15,"column":14,"nodeType":"102","messageId":"103","endLine":15,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":29,"column":34,"nodeType":"118","messageId":"119","endLine":29,"endColumn":36},{"ruleId":"100","severity":1,"message":"115","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"120","line":9,"column":11,"nodeType":"102","messageId":"103","endLine":9,"endColumn":24},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'quarters' is assigned a value but never used.","'isOver' is assigned a value but never used.","'useDrop' is defined but never used.","'ref' is assigned a value but never used.","'QuarterColumn' is defined but never used.","'useCallback' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'years' is assigned a value but never used.","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'quartersColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]